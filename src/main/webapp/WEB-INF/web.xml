<web-app xmlns="http://java.sun.com/xml/ns/javaee" version="2.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <display-name>Spring Security Sample</display-name>

    <!--
       Spring security filter config
         N.b. 'springSecurityFilterChain' is a magic bean name generated by Spring Security
     -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--Loads default Spring config file from WEB-INF/applicationContext.xml-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <welcome-file-list>
        <welcome-file>/</welcome-file>
    </welcome-file-list>

    <!--<security-constraint>-->
        <!--<web-resource-collection>-->
            <!--<web-resource-name>Resources</web-resource-name>-->
            <!--<url-pattern>/dsfsdd/*</url-pattern>-->
        <!--</web-resource-collection>-->
        <!--<auth-constraint>-->
            <!--&lt;!&ndash; Everyone needs at least this role &ndash;&gt;-->
            <!--<role-name>ROLE_USER</role-name>-->
        <!--</auth-constraint>-->
    <!--</security-constraint>-->

    <!---->
    <!--<security-constraint>-->
        <!--<web-resource-collection>-->
            <!--<web-resource-name>Resources</web-resource-name>-->
            <!--<url-pattern>/resources/*</url-pattern>-->
        <!--</web-resource-collection>-->
    <!--</security-constraint>-->

    <!--<security-constraint>-->
        <!--<web-resource-collection>-->
            <!--<web-resource-name>Everything</web-resource-name>-->
            <!--<url-pattern>/*</url-pattern>-->
        <!--</web-resource-collection>-->
        <!--<auth-constraint>-->
            <!--&lt;!&ndash; Everyone needs at least this role &ndash;&gt;-->
            <!--<role-name>ROLE_USER</role-name>-->
        <!--</auth-constraint>-->
    <!--</security-constraint>-->

    <login-config>
        <auth-method>FORM</auth-method>
        <!-- For FORM login, most app servers don't use realm-name -->
        <!-- When realm-name is not set here, Jetty's config must use a realm called 'default' -->
        <form-login-config>
            <form-login-page>/login</form-login-page>
            <form-error-page>/loginfailed</form-error-page>
        </form-login-config>
    </login-config>

    <!-- These roles will be available through the container, possibly indirectly, via a name mapping -->
    <security-role>
        <role-name>ROLE_USER</role-name>
    </security-role>
    <security-role>
        <role-name>ROLE_ADMIN</role-name>
    </security-role>


</web-app>
